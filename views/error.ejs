<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Error - OAuth2 Server</title>
    <style>
        :root {
            /* Light mode colors */
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-accent: #10b981;
            --border-color: #e2e8f0;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --error-bg: #fef2f2;
            --error-border: #fecaca;
            --error-text: #dc2626;
            --error-icon: #ef4444;
        }

        [data-theme="dark"] {
            /* Dark mode colors */
            --bg-primary: #0f172a;
            --bg-secondary: #1e293b;
            --text-primary: #f1f5f9;
            --text-secondary: #94a3b8;
            --text-accent: #10b981;
            --border-color: #334155;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
            --error-bg: #372626;
            --error-border: #7f2d2d;
            --error-text: #fca5a5;
            --error-icon: #f87171;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        .error-container {
            background-color: var(--bg-secondary);
            border-radius: 12px;
            box-shadow: var(--shadow);
            width: 100%;
            max-width: 600px;
            padding: 2.5rem 2rem;
            border: 1px solid var(--border-color);
            text-align: center;
        }

        .error-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow:
                    0 4px 12px rgba(239, 68, 68, 0.3),
                    0 2px 4px rgba(239, 68, 68, 0.2);
            animation: errorPulse 2s infinite;
        }

        .error-icon svg {
            width: 40px;
            height: 40px;
            color: white;
            animation: shake 0.8s ease-in-out;
        }

        .error-title {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--error-text);
            margin-bottom: 1rem;
            animation: slideUp 0.6s ease-out 0.1s both;
        }

        .error-message {
            background-color: var(--error-bg);
            border: 1px solid var(--error-border);
            border-radius: 8px;
            padding: 1.25rem;
            margin-bottom: 1.5rem;
            animation: slideUp 0.6s ease-out 0.2s both;
        }

        .error-code {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--error-text);
            margin-bottom: 0.5rem;
        }

        .error-description {
            font-size: 0.875rem;
            color: var(--error-text);
            line-height: 1.5;
            opacity: 0.9;
        }

        .help-text {
            font-size: 0.875rem;
            color: var(--text-secondary);
            margin-bottom: 2rem;
            line-height: 1.5;
            animation: slideUp 0.6s ease-out 0.3s both;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
            animation: slideUp 0.6s ease-out 0.4s both;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.15s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            border: none;
        }

        .btn-primary {
            background: linear-gradient(180deg, #10b981 0%, #059669 100%);
            color: white;
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.2) inset,
                    0 1px 2px 0 rgba(0, 0, 0, 0.1),
                    0 2px 4px 0 rgba(16, 185, 129, 0.2);
        }

        .btn-primary:hover {
            background: linear-gradient(180deg, #059669 0%, #047857 100%);
            transform: translateY(-1px);
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.2) inset,
                    0 2px 4px 0 rgba(0, 0, 0, 0.15),
                    0 4px 8px 0 rgba(16, 185, 129, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(180deg, #f8fafc 0%, #e2e8f0 100%);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.5) inset,
                    0 1px 2px 0 rgba(0, 0, 0, 0.05);
        }

        [data-theme="dark"] .btn-secondary {
            background: linear-gradient(180deg, #374151 0%, #1f2937 100%);
            border-color: var(--border-color);
        }

        .btn-secondary:hover {
            background: linear-gradient(180deg, #f1f5f9 0%, #cbd5e1 100%);
            transform: translateY(-1px);
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.6) inset,
                    0 2px 4px 0 rgba(0, 0, 0, 0.1);
        }

        [data-theme="dark"] .btn-secondary:hover {
            background: linear-gradient(180deg, #4b5563 0%, #374151 100%);
        }

        .btn:active {
            transform: translateY(0px);
        }

        .footer {
            margin-top: 2.5rem;
            font-size: 0.75rem;
            color: var(--text-secondary);
            animation: slideUp 0.6s ease-out 0.5s both;
        }

        .theme-toggle {
            position: fixed;
            top: 1rem;
            right: 1rem;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 0.5rem;
            cursor: pointer;
            color: var(--text-primary);
            transition: all 0.2s ease;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .theme-toggle:hover {
            background: var(--bg-primary);
        }

        @media (max-width: 480px) {
            .error-container {
                padding: 2rem 1.5rem;
                margin: 0.5rem;
                max-width: none;
            }

            .theme-toggle {
                top: 0.5rem;
                right: 0.5rem;
            }

            .error-icon {
                width: 70px;
                height: 70px;
            }

            .error-icon svg {
                width: 35px;
                height: 35px;
            }

            .error-title {
                font-size: 1.5rem;
            }

            .action-buttons {
                flex-direction: column;
                align-items: center;
            }

            .btn {
                width: 100%;
                max-width: 280px;
            }
        }

        /* Animations */
        @keyframes errorPulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }

        @keyframes shake {
            0%, 100% {
                transform: translateX(0);
            }
            10%, 30%, 50%, 70%, 90% {
                transform: translateX(-2px);
            }
            20%, 40%, 60%, 80% {
                transform: translateX(2px);
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Error code specific styling */
        .error-codes {
            display: grid;
            grid-template-columns: auto 1fr;
            gap: 0.5rem;
            text-align: left;
            max-width: 400px;
            margin: 0 auto;
        }

        .error-codes dt {
            font-weight: 600;
            color: var(--error-text);
        }

        .error-codes dd {
            color: var(--text-secondary);
        }
    </style>
</head>
<body>
<button class="theme-toggle" onclick="toggleTheme()" id="themeToggle" aria-label="Toggle theme">
    🌙
</button>

<div class="error-container">

    <div class="error-icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5">
            <circle cx="12" cy="12" r="10"/>
            <line x1="15" y1="9" x2="9" y2="15"/>
            <line x1="9" y1="9" x2="15" y2="15"/>
        </svg>
    </div>

    <h1 class="error-title">Something went wrong</h1>

    <div class="error-message">
        <div class="error-code"><%= error %></div>
        <% if (error_description) { %>
            <div class="error-description"><%= error_description %></div>
        <% } %>
    </div>

    <p class="help-text">
        Don't worry, this happens sometimes. Please try again or contact the administrator if the problem persists.
    </p>

    <div class="action-buttons">
        <button onclick="window.history.back()" class="btn btn-secondary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="m15 18-6-6 6-6"/>
            </svg>
            Go Back
        </button>
        <a href="/" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                <polyline points="9,22 9,12 15,12 15,22"/>
            </svg>
            Return Home
        </a>
    </div>

    <div class="footer">
        Powered by Easypanel OAuth2
    </div>
</div>

<script>
    // Theme management
    function getTheme() {
        return localStorage.getItem('theme') ||
            (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    }

    function setTheme(theme) {
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem('theme', theme);

        const themeToggle = document.getElementById('themeToggle');
        themeToggle.textContent = theme === 'dark' ? '☀️' : '🌙';
        themeToggle.setAttribute('aria-label', `Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`);
    }

    function toggleTheme() {
        const currentTheme = getTheme();
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
    }

    // Initialize theme
    setTheme(getTheme());

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
            setTheme(e.matches ? 'dark' : 'light');
        }
    });

    // Auto-retry functionality for certain error types
    const errorCode = '<%= error %>';
    if (errorCode === 'server_error' || errorCode === 'temporarily_unavailable') {
        let retryCount = 0;
        const maxRetries = 3;

        function autoRetry() {
            if (retryCount < maxRetries) {
                retryCount++;
                setTimeout(() => {
                    window.location.reload();
                }, 5000 * retryCount); // Exponential backoff
            }
        }

        // Show retry option for server errors
        setTimeout(() => {
            const helpText = document.querySelector('.help-text');
            helpText.innerHTML += '<br><br>The page will automatically retry in a few seconds...';
            autoRetry();
        }, 2000);
    }
</script>
</body>
</html>