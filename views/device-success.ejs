<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - OAuth2 Server</title>
    <style>
        :root {
            /* Light mode colors */
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-accent: #10b981;
            --border-color: #e2e8f0;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --success-bg: #ecfdf5;
            --success-border: #a7f3d0;
            --success-text: #065f46;
        }

        [data-theme="dark"] {
            /* Dark mode colors */
            --bg-primary: #0f172a;
            --bg-secondary: #1e293b;
            --text-primary: #f1f5f9;
            --text-secondary: #94a3b8;
            --text-accent: #10b981;
            --border-color: #334155;
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
            --success-bg: #064e3b;
            --success-border: #047857;
            --success-text: #6ee7b7;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
        }

        .container {
            background-color: var(--bg-secondary);
            border-radius: 12px;
            box-shadow: var(--shadow);
            width: 100%;
            max-width: 480px;
            padding: 2.5rem 2rem;
            border: 1px solid var(--border-color);
            text-align: center;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow:
                    0 4px 12px rgba(16, 185, 129, 0.3),
                    0 2px 4px rgba(16, 185, 129, 0.2);
            animation: successPulse 2s infinite;
        }

        .success-icon svg {
            width: 40px;
            height: 40px;
            color: white;
            animation: checkmark 0.6s ease-in-out 0.3s both;
        }

        .title {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--text-accent);
            margin-bottom: 1rem;
            animation: slideUp 0.6s ease-out 0.1s both;
        }

        .message {
            font-size: 1rem;
            line-height: 1.6;
            color: var(--text-secondary);
            margin-bottom: 2rem;
            animation: slideUp 0.6s ease-out 0.2s both;
        }

        .close-button {
            background: linear-gradient(180deg, #f8fafc 0%, #e2e8f0 100%);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.15s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            animation: slideUp 0.6s ease-out 0.4s both;
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.5) inset,
                    0 1px 2px 0 rgba(0, 0, 0, 0.05);
        }

        [data-theme="dark"] .close-button {
            background: linear-gradient(180deg, #374151 0%, #1f2937 100%);
            border-color: var(--border-color);
        }

        .close-button:hover {
            background: linear-gradient(180deg, #f1f5f9 0%, #cbd5e1 100%);
            transform: translateY(-1px);
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.6) inset,
                    0 2px 4px 0 rgba(0, 0, 0, 0.1);
        }

        [data-theme="dark"] .close-button:hover {
            background: linear-gradient(180deg, #4b5563 0%, #374151 100%);
        }

        .close-button:active {
            transform: translateY(0px);
            box-shadow:
                    0 1px 0 0 rgba(255, 255, 255, 0.3) inset,
                    0 1px 2px 0 rgba(0, 0, 0, 0.1);
        }

        .footer {
            margin-top: 2.5rem;
            font-size: 0.75rem;
            color: var(--text-secondary);
            animation: slideUp 0.6s ease-out 0.5s both;
        }

        .theme-toggle {
            position: fixed;
            top: 1rem;
            right: 1rem;
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 0.5rem;
            cursor: pointer;
            color: var(--text-primary);
            transition: all 0.2s ease;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .theme-toggle:hover {
            background: var(--bg-primary);
        }

        @media (max-width: 480px) {
            .container {
                padding: 2rem 1.5rem;
                margin: 0.5rem;
                max-width: none;
            }

            .theme-toggle {
                top: 0.5rem;
                right: 0.5rem;
            }

            .success-icon {
                width: 70px;
                height: 70px;
            }

            .success-icon svg {
                width: 35px;
                height: 35px;
            }

            .title {
                font-size: 1.5rem;
            }
        }

        /* Animations */
        @keyframes successPulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }

        @keyframes checkmark {
            0% {
                opacity: 0;
                transform: scale(0.3) rotate(-45deg);
            }
            50% {
                opacity: 1;
                transform: scale(1.1) rotate(-45deg);
            }
            100% {
                opacity: 1;
                transform: scale(1) rotate(0deg);
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Auto-close timer styles */
        .auto-close-timer {
            margin-top: 1rem;
            font-size: 0.75rem;
            color: var(--text-secondary);
            opacity: 0.8;
        }

        .timer-bar {
            width: 100%;
            height: 2px;
            background-color: var(--border-color);
            border-radius: 1px;
            margin-top: 0.5rem;
            overflow: hidden;
        }

        .timer-progress {
            height: 100%;
            background: linear-gradient(90deg, #10b981 0%, #059669 100%);
            width: 100%;
            animation: countdown 10s linear forwards;
        }

        @keyframes countdown {
            from {
                width: 100%;
            }
            to {
                width: 0%;
            }
        }
    </style>
</head>
<body>
<button class="theme-toggle" onclick="toggleTheme()" id="themeToggle" aria-label="Toggle theme">
    🌙
</button>

<div class="container">
    <div class="success-icon">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3">
            <polyline points="20 6 9 17 4 12"></polyline>
        </svg>
    </div>

    <h1 class="title">Success!</h1>

    <p class="message"><%= message %></p>

    <a href="javascript:void(0);" onclick="closeWindow()" class="close-button">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="m9 18 6-6-6-6"/>
        </svg>
        Close Window
    </a>

    <div class="auto-close-timer" id="autoCloseTimer">
        This window will close automatically in <span id="countdown">10</span> seconds
        <div class="timer-bar">
            <div class="timer-progress"></div>
        </div>
    </div>

    <div class="footer">
        Powered by Easypanel OAuth2
    </div>
</div>

<script>
    // Theme management
    function getTheme() {
        return localStorage.getItem('theme') ||
            (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    }

    function setTheme(theme) {
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem('theme', theme);

        const themeToggle = document.getElementById('themeToggle');
        themeToggle.textContent = theme === 'dark' ? '☀️' : '🌙';
        themeToggle.setAttribute('aria-label', `Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`);
    }

    function toggleTheme() {
        const currentTheme = getTheme();
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
    }

    // Initialize theme
    setTheme(getTheme());

    // Listen for system theme changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
            setTheme(e.matches ? 'dark' : 'light');
        }
    });

    // Window closing functionality
    function closeWindow() {
        // Try different methods to close the window
        if (window.opener) {
            // If opened by another window
            window.close();
        } else {
            // Try to close normally
            window.close();

            // If that doesn't work, show a message
            setTimeout(() => {
                if (!window.closed) {
                    alert('Please close this window manually or return to your device.');
                }
            }, 100);
        }
    }

    // Auto-close functionality
    let timeLeft = 10;
    const countdownElement = document.getElementById('countdown');

    const autoCloseInterval = setInterval(() => {
        timeLeft--;
        countdownElement.textContent = timeLeft;

        if (timeLeft <= 0) {
            clearInterval(autoCloseInterval);
            closeWindow();
        }
    }, 1000);

    // Cancel auto-close if user interacts with the page
    document.addEventListener('click', () => {
        clearInterval(autoCloseInterval);
        document.getElementById('autoCloseTimer').style.display = 'none';
    });

    document.addEventListener('keydown', () => {
        clearInterval(autoCloseInterval);
        document.getElementById('autoCloseTimer').style.display = 'none';
    });

    // Handle window focus events for better UX
    window.addEventListener('focus', () => {
        // Window is focused, user might want to keep it open
        clearInterval(autoCloseInterval);
        document.getElementById('autoCloseTimer').style.display = 'none';
    });
</script>
</body>
</html>