<!DOCTYPE html>
<html>
<head>
    <title><%= title %> - OAuth2 Server</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        :root {
            --primary: #2563eb;
            --primary-hover: #1d4ed8;
            --secondary: #4b5563;
            --accent: #8b5cf6;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --bg: #f9fafb;
            --card-bg: #ffffff;
            --text: #1f2937;
            --text-secondary: #6b7280;
            --border: #e5e7eb;
            --radius: 0.375rem;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: var(--bg);
            color: var(--text);
            line-height: 1.5;
            padding: 1.5rem;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border);
        }

        .header-title h1 {
            font-size: 1.875rem;
            font-weight: 700;
            color: var(--text);
            margin-bottom: 0.5rem;
        }

        .header-title p {
            color: var(--text-secondary);
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            background-color: var(--primary);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: var(--radius);
            font-weight: 500;
            text-decoration: none;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .btn:hover {
            background-color: var(--primary-hover);
        }

        .btn-secondary {
            background-color: var(--secondary);
        }

        .actions {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .section {
            background-color: var(--card-bg);
            border-radius: var(--radius);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            margin-bottom: 1.5rem;
            overflow: hidden;
        }

        .section-header {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid var(--border);
            background-color: rgba(0, 0, 0, 0.02);
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .section-content {
            padding: 1.5rem;
        }

        .meta-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .meta-item {
            background-color: var(--bg);
            border-radius: var(--radius);
            padding: 1rem;
        }

        .meta-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            margin-bottom: 0.25rem;
        }

        .meta-value {
            font-weight: 500;
            word-break: break-all;
        }

        .json-viewer {
            background-color: var(--bg);
            border-radius: var(--radius);
            padding: 1.5rem;
            font-family: monospace;
            font-size: 0.875rem;
            overflow-x: auto;
            white-space: pre-wrap;
        }

        .property-key {
            color: var(--accent);
        }

        .property-string {
            color: var(--success);
        }

        .property-number {
            color: var(--primary);
        }

        .property-boolean {
            color: var(--warning);
        }

        .property-null {
            color: var(--danger);
        }

        .footer {
            margin-top: 3rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border);
            color: var(--text-secondary);
            font-size: 0.875rem;
            text-align: center;
        }

        /* Date formatting */
        .date-value {
            font-family: monospace;
            color: var(--accent);
        }

        /* Add syntax highlighting for JSON */
        .json-key {
            color: #0550ae;
        }

        .json-string {
            color: #15803d;
        }

        .json-number {
            color: #1d4ed8;
        }

        .json-boolean {
            color: #9333ea;
        }

        .json-null {
            color: #dc2626;
        }

        /* For pretty-printing JSON */
        pre {
            margin: 0;
        }

        /* Tabs for different views */
        .tabs {
            display: flex;
            border-bottom: 1px solid var(--border);
            margin-bottom: 1rem;
        }

        .tab {
            padding: 0.75rem 1.25rem;
            cursor: pointer;
            font-weight: 500;
            border-bottom: 2px solid transparent;
        }

        .tab.active {
            border-bottom-color: var(--primary);
            color: var(--primary);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }
    </style>
</head>
<body>
<div class="container">
    <header>
        <div class="header-title">
            <h1><%= title %></h1>
            <p>Viewing details for entry with key: <code><%= key %></code></p>
        </div>
        <div class="user-info">
            <% if (user) { %>
                <span>Logged in as <strong><%= user.email %></strong></span>
                <a href="/logout" class="btn">Logout</a>
            <% } else { %>
                <a href="/login" class="btn">Login</a>
            <% } %>
        </div>
    </header>

    <div class="actions">
        <a href="/test/db-explorer" class="btn">Back to All Databases</a>
        <a href="/test/db-explorer/<%= dbName %>" class="btn btn-secondary">Back to <%= dbName %></a>
    </div>

    <!-- Entry Metadata Section -->
    <div class="section">
        <div class="section-header">
            <div class="section-title">Entry Metadata</div>
        </div>
        <div class="section-content">
            <div class="meta-grid">
                <div class="meta-item">
                    <div class="meta-label">Database Name</div>
                    <div class="meta-value"><%= dbName %></div>
                </div>
                <div class="meta-item">
                    <div class="meta-label">Key</div>
                    <div class="meta-value"><%= key %></div>
                </div>
                <div class="meta-item">
                    <div class="meta-label">Value Type</div>
                    <div class="meta-value">
                        <% if (typeof entry === 'object' && entry !== null) { %>
                            Object
                        <% } else if (Array.isArray(entry)) { %>
                            Array
                        <% } else if (entry instanceof Date) { %>
                            Date
                        <% } else { %>
                            <%= typeof entry %>
                        <% } %>
                    </div>
                </div>
                <% if (typeof entry === 'object' && entry !== null) { %>
                    <div class="meta-item">
                        <div class="meta-label">Property Count</div>
                        <div class="meta-value"><%= Object.keys(entry).length %></div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Entry Value Section -->
    <div class="section">
        <div class="section-header">
            <div class="section-title">Entry Value</div>
        </div>
        <div class="section-content">
            <div class="tabs">
                <div class="tab active" data-tab="formatted">Formatted</div>
                <div class="tab" data-tab="raw">Raw JSON</div>
            </div>

            <div class="tab-content active" id="formatted">
                <div class="json-viewer">
                    <%
                    // Function to format entry in a nice way
                    function formatValue(value, indent = 0) {
                        const indentStr = '  '.repeat(indent);

                        if (value === null) {
                            return `<span class="json-null">null</span>`;
                        } else if (typeof value === 'string') {
                            return `<span class="json-string">"${value.replace(/</g, '&lt;').replace(/>/g, '&gt;')}"</span>`;
                        } else if (typeof value === 'number') {
                            return `<span class="json-number">${value}</span>`;
                        } else if (typeof value === 'boolean') {
                            return `<span class="json-boolean">${value}</span>`;
                        } else if (value instanceof Date) {
                            return `<span class="json-string">"${value.toISOString()}"</span> <span class="json-comment">// Date</span>`;
                        } else if (Array.isArray(value)) {
                            if (value.length === 0) return '[]';

                            let result = '[\n';
                            for (let i = 0; i < value.length; i++) {
                                result += `${indentStr}  ${formatValue(value[i], indent + 1)}`;
                                if (i < value.length - 1) result += ',';
                                result += '\n';
                            }
                            result += `${indentStr}]`;
                            return result;
                        } else if (typeof value === 'object') {
                            const keys = Object.keys(value);
                            if (keys.length === 0) return '{}';

                            let result = '{\n';
                            keys.forEach((key, i) => {
                                result += `${indentStr}  <span class="json-key">"${key}"</span>: ${formatValue(value[key], indent + 1)}`;
                                if (i < keys.length - 1) result += ',';
                                result += '\n';
                            });
                            result += `${indentStr}}`;
                            return result;
                        } else {
                            return String(value);
                        }
                    }
                    %>

                    <pre><%= formatValue(entry) %></pre>
                </div>
            </div>

            <div class="tab-content" id="raw">
                <div class="json-viewer">
                    <pre><%= JSON.stringify(entry, null, 2) %></pre>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer">
        <p>Database Explorer for Easypanel OAuth2 Server &copy; <%= new Date().getFullYear() %></p>
    </footer>
</div>

<script>
    // Tab switching
    document.querySelectorAll('.tab').forEach(tab => {
        tab.addEventListener('click', () => {
            // Remove active class from all tabs
            document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));

            // Add active class to clicked tab
            tab.classList.add('active');

            // Show corresponding content
            const tabId = tab.getAttribute('data-tab');
            document.getElementById(tabId).classList.add('active');
        });
    });
</script>
</body>
</html>